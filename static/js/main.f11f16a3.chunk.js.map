{"version":3,"sources":["services/firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","App","useState","burgers","setBurgers","eaten","setEaten","burger","setBurger","useEffect","collection","get","then","res","data","docs","map","doc","id","catch","err","console","log","className","filter","item","status","index","name","onClick","update","list","findIndex","it","delete","splice","value","onChange","e","target","placeholder","length","add","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f11f16a3.chunk.js","sourcesContent":["\r\n\r\nimport  firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCQGfjUN65NsmAijeo6yfFQO0C9CiPMIeQ\",\r\n    authDomain: \"burger-app-94815.firebaseapp.com\",\r\n    projectId: \"burger-app-94815\",\r\n    storageBucket: \"burger-app-94815.appspot.com\",\r\n    messagingSenderId: \"1016989182693\",\r\n    appId: \"1:1016989182693:web:0b873b5a42042d1233020c\",\r\n    measurementId: \"G-YYRNKJ5V4H\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\n\r\nexport default db;","\r\nimport React, {useState, useEffect} from 'react';\r\nimport db from './services/firebase';\r\n\r\nfunction App() {\r\n\r\n  const [burgers, setBurgers] = useState([]);\r\n  const [eaten, setEaten] = useState(false);\r\n  const [burger, setBurger] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    db.collection('burgers')\r\n      .get()\r\n      .then(res => {\r\n        const data = res.docs.map((doc) => {\r\n          return { id: doc.id, ...doc.data() }\r\n        });\r\n        setBurgers(data);\r\n      })\r\n      .catch(err => {\r\n      console.log(err, 'err');\r\n      })\r\n  }, []);\r\n\r\n  const addBurger = () => {\r\n     db.collection(\"burgers\")\r\n          .add({name: burger, status: false})\r\n          .then(res => {\r\n            setBurgers([...burgers, {status: false, name: burger, id: res.id}]);\r\n            setBurger('')\r\n          })\r\n          .catch(err => {\r\n            console.log(err, 'err');\r\n          });\r\n  }\r\n\r\n  const updateStatus = (id) => {\r\n    db.collection(\"burgers\")\r\n          .doc(id)\r\n          .update({status: !eaten})\r\n          .then(res => {\r\n            let list = burgers;\r\n            let index = list.findIndex(it => it.id === id);\r\n            list[index] = {...list[index], status: !eaten};\r\n            setBurgers([...list]);\r\n          })\r\n          .catch(err => {\r\n            console.log(err, 'err');\r\n          });\r\n  };\r\n\r\n  const deleteBurger = (id) => {\r\n    db.collection(\"burgers\")\r\n          .doc(id)\r\n          .delete()\r\n          .then(res => {\r\n            let list = burgers;\r\n            let index = list.findIndex(it => it.id === id);\r\n            list.splice(index, 1);\r\n            setBurgers([...list]);\r\n          })\r\n          .catch(err => {\r\n            console.log(err, 'err');\r\n          });\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n          <h1>Burgers</h1>\r\n          {burgers\r\n            .filter(item => item.status === eaten)\r\n            .map((item, index) => {\r\n            return(\r\n              <div className=\"item\" key={index}>\r\n                <div className=\"item_row\">\r\n                  <span>{item.name}</span>\r\n                  <div className=\"control\">\r\n                    {!eaten && <div onClick={() => {updateStatus(item.id)}} className=\"eat\">Eat it</div>}\r\n                    <div onClick={() => {deleteBurger(item.id)}} className=\"delete\"/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n          {!eaten && <div className=\"item\">\r\n                <div className=\"item_row\">\r\n                  <input value={burger} onChange={e => setBurger(e.target.value)} placeholder=\"Add burger\"/>\r\n                  <div className=\"control\">\r\n                    <div onClick={() => {\r\n                        burger.length > 0 && addBurger();\r\n                      }} className=\"add\"/>\r\n                  </div>\r\n                </div>\r\n          </div>}\r\n      </div>\r\n      <div className=\"navigation\">\r\n          <span onClick={() => setEaten(false)} className={`${!eaten ? 'active' : 'nonActive'}`}>Burgers Made</span>\r\n          <span onClick={() => setEaten(true)} className={`${eaten ? 'active' : 'nonActive'}`}>Burgers Eaten</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}