{"version":3,"sources":["services/firebase.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","App","useState","burgers","setBurgers","burger","setBurger","useEffect","collection","get","then","res","data","docs","map","doc","id","catch","err","console","log","deleteBurger","delete","list","index","findIndex","it","splice","className","filter","item","status","name","onClick","eaten","update","value","onChange","e","target","placeholder","length","add","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae111f44.chunk.js","sourcesContent":["\r\n\r\nimport  firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCQGfjUN65NsmAijeo6yfFQO0C9CiPMIeQ\",\r\n    authDomain: \"burger-app-94815.firebaseapp.com\",\r\n    projectId: \"burger-app-94815\",\r\n    storageBucket: \"burger-app-94815.appspot.com\",\r\n    messagingSenderId: \"1016989182693\",\r\n    appId: \"1:1016989182693:web:0b873b5a42042d1233020c\",\r\n    measurementId: \"G-YYRNKJ5V4H\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nconst db = firebase.firestore();\r\n\r\nexport default db;","\r\nimport React, {useState, useEffect} from 'react';\r\nimport db from './services/firebase';\r\n\r\nfunction App() {\r\n\r\n  const [burgers, setBurgers] = useState([]);\r\n  const [burger, setBurger] = useState('');\r\n\r\n\r\n  useEffect(() => {\r\n    db.collection('burgers')\r\n      .get()\r\n      .then(res => {\r\n        const data = res.docs.map((doc) => {\r\n          return { id: doc.id, ...doc.data() }\r\n        });\r\n        setBurgers(data);\r\n      })\r\n      .catch(err => {\r\n      console.log(err, 'err');\r\n      })\r\n  }, []);\r\n\r\n  const addBurger = () => {\r\n     db.collection(\"burgers\")\r\n          .add({name: burger, status: false})\r\n          .then(res => {\r\n            setBurgers([...burgers, {status: false, name: burger, id: res.id}]);\r\n            setBurger('')\r\n          })\r\n          .catch(err => {\r\n            console.log(err, 'err');\r\n          });\r\n  }\r\n\r\n  const updateStatus = (id, eaten) => {\r\n    db.collection(\"burgers\")\r\n          .doc(id)\r\n          .update({status: eaten})\r\n          .then(res => {\r\n            let list = burgers;\r\n            let index = list.findIndex(it => it.id === id);\r\n            list[index] = {...list[index], status: eaten};\r\n            setBurgers([...list]);\r\n          })\r\n          .catch(err => {\r\n            console.log(err, 'err');\r\n          });\r\n  };\r\n\r\n  const deleteBurger = (id) => {\r\n    db.collection(\"burgers\")\r\n          .doc(id)\r\n          .delete()\r\n          .then(res => {\r\n            let list = burgers;\r\n            let index = list.findIndex(it => it.id === id);\r\n            list.splice(index, 1);\r\n            setBurgers([...list]);\r\n          })\r\n          .catch(err => {\r\n            console.log(err, 'err');\r\n          });\r\n  };\r\n\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n          <h1>Burger made</h1>\r\n          {burgers\r\n            .filter(item => item.status === false)\r\n            .map((item, index) => {\r\n            return(\r\n              <div className=\"item\" key={index}>\r\n                <div className=\"item_row\">\r\n                  <span>{item.name}</span>\r\n                  <div className=\"control\">\r\n                    <div onClick={() => {updateStatus(item.id, true)}} className=\"eat\">Eat it</div>\r\n                    <div onClick={() => {deleteBurger(item.id)}} className=\"delete\"/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n          <div className=\"item\">\r\n                <div className=\"item_row\">\r\n                  <input value={burger} onChange={e => setBurger(e.target.value)} placeholder=\"Add burger\"/>\r\n                  <div className=\"control\">\r\n                    <div onClick={() => {\r\n                        burger.length > 0 && addBurger();\r\n                      }} className=\"add\"/>\r\n                  </div>\r\n                </div>\r\n          </div>\r\n          <h1>Burger made</h1>\r\n          {burgers\r\n            .filter(item => item.status === true)\r\n            .map((item, index) => {\r\n            return(\r\n              <div className=\"item\" key={index}>\r\n                <div className=\"item_row\">\r\n                  <span>{item.name}</span>\r\n                  <div className=\"control\">\r\n                    <div onClick={() => {deleteBurger(item.id)}} className=\"delete\"/>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}